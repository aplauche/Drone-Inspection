/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 public/models/turbine.gltf
*/

import React, { useLayoutEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations, Text } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import Detection from './Detection'

export function Turbine(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/turbine.gltf')
  const { actions } = useAnimations(animations, group)

  const blades = useRef()




  useFrame((state, delta) => {
    blades.current.rotation.z += delta
  })



  return (
    <group ref={group} dispose={null} >
      <group name="Scene">
        <group name="Wind_turbine_001">

          <Detection 
            position={[0, 4.35, 0.5]}
            textPosition={[-1.3, 0.6, 0.5]}
            text="ROTOR WEAR  -  35%"
          />
          <mesh castShadow={true} name="Wind_turbine_001_Wind_turbine_Circle001" geometry={nodes.Wind_turbine_001_Wind_turbine_Circle001.geometry} material={materials.gray} />
          <mesh name="Wind_turbine_001_Wind_turbine_Circle001_1" geometry={nodes.Wind_turbine_001_Wind_turbine_Circle001_1.geometry} material={materials.red} />
          <group ref={blades} name="Wind_turbine_001_Blades" position={[0.008, 4.384, 0.489]}>
            <mesh castShadow={true} name="Wind_turbine_001_Wind_turbine_Circle000" geometry={nodes.Wind_turbine_001_Wind_turbine_Circle000.geometry} material={materials.gray} />
            <mesh  castShadow={true} name="Wind_turbine_001_Wind_turbine_Circle000_1" geometry={nodes.Wind_turbine_001_Wind_turbine_Circle000_1.geometry} material={materials.red} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/turbine.gltf')
